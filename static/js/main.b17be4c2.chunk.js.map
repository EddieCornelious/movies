{"version":3,"sources":["components/Header.js","components/util.js","components/MainContent.js","components/VideoPlayer.js","components/App.js","serviceWorker.js","index.js"],"names":["DropDown","props","react_default","a","createElement","className","type","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","onClick","sortData","href","GameSearchBar","e","this","filterData","target","value","onChange","handleChange","bind","placeholder","React","Component","Header","Header_GameSearchBar","Header_DropDown","toKViewers","num","toStr","toString","substring","mergesort","compare","aLen","length","mid","Math","floor","b","c","push","shift","merge","slice","GameCardRow","_ref","data","displayStreams","mode","displayCertainStreams","toggleStreamVideo","Fragment","map","content","i","url","thumbnail_url","key","MainContent_StreamCard","stream_id","bg","replace","userName","user_name","gameId","game_id","streamId","viewers","viewer_count","game","game_played","banner","box_art_url","MainContent_GameCard","name","GameCard","Fade_default","alt","src","StreamCard","MainContent","_ref2","displayGames","loadingData","dataToRender","renderedData","MainContent_GameCardRow","renderData","VideoPlayer","_this","streamer","liveStreamer","cName","shouldShow","frameBorder","allowFullScreen","scrolling","closeStream","App","gameIdMap","state","topGames","topStreams","activeData","shouldShowPlayer","loadingApp","fetch","headers","Client-ID","then","response","json","process","channelIdArray","userQuery","join","_this2","userBannerArray","generator","calls","gen","random","cancel","genGameViews","fetchGames","games","forEach","setState","fetchStreams","streams","stream","user_id","Promise","resolve","getBannerAndUpdateStreams","getChannelBanners","banners","profile_image_url","_this3","window","scrollTo","top","behavior","self","setTimeout","streamerName","stringToMatch","stringToMatch_LC","toLowerCase","dataToFilterProp","dataToFilter","contentProp","newData","filter","startsWith","arguments","undefined","propWanted","components_Header","components_VideoPlayer","components_MainContent","showStream","currentPage","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b17be4c2.chunk.js","sourcesContent":["import \"../styles/Header.scss\";\nimport React from \"react\";\n\nconst DropDown = props => {\n  return (\n    <div className=\"dropdown\">\n      <button\n        className=\"btn btn-default dropdown-toggle\"\n        type=\"button\"\n        id=\"dropdownMenu1\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"true\"\n      >\n        Sort By\n      </button>\n\n      <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n        <li onClick={() => props.sortData(\"desc\")}>\n          <a href=\"#\">Most Viewed</a>\n        </li>\n        <li onClick={() => props.sortData(\"asc\")}>\n          <a href=\"#\">Least Viewed</a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nclass GameSearchBar extends React.Component {\n  handleChange(e) {\n    this.props.filterData(e.target.value);\n  }\n  render() {\n    return (\n      <input\n        onChange={this.handleChange.bind(this)}\n        className=\"header__search\"\n        type=\"text\"\n        placeholder=\"Search Games\"\n      />\n    );\n  }\n}\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"header\">\n          <div className=\"brand\">\n            <em>Dashboard Box</em>\n          </div>\n\n          <form className=\"search__form\">\n            <GameSearchBar filterData={this.props.filterData} />\n\n            <button className=\"search__btn\" type=\"submit\">\n              <i className=\"fa fa-search\">&nbsp;</i>\n            </button>\n          </form>\n          <DropDown sortData={this.props.sortData} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","export function toKViewers(num) {\n  if (num < 1000) {\n    return num;\n  }\n  let toStr = num.toString();\n  if (num >= 1000 && num < 10000) {\n    return toStr.substring(0, 1) + \".\" + toStr[1] + \"K\";\n  }\n  if (num >= 10000 && num < 100000) {\n    return toStr.substring(0, 2) + \".\" + toStr[2] + \"K\";\n  }\n  if (num >= 100000) {\n    return toStr.substring(0, 3) + \".\" + toStr[3] + \"K\";\n  }\n  return \"100K+\";\n}\n\nexport function mergesort(a, compare) {\n  let aLen = a.length;\n  if (aLen === 1) {\n    return a;\n  }\n  let mid = Math.floor(aLen / 2);\n  let l1 = mergesort(a.slice(0, mid), compare);\n  let l2 = mergesort(a.slice(mid), compare);\n  return merge(l1, l2, compare);\n}\n\nfunction merge(a, b, compare) {\n  let c = [];\n  while (a.length > 0 && b.length > 0) {\n    if (compare(a[0], b[0]) === 1) {\n      c.push(b.shift());\n    } else {\n      c.push(a.shift());\n    }\n  }\n\n  while (a.length > 0) {\n    c.push(a.shift());\n  }\n\n  while (b.length > 0) {\n    c.push(b.shift());\n  }\n\n  return c;\n}\n\nexport function genGameViews() {\n  let state = 100000;\n  let calls = 0;\n  function cancel() {\n    state = 100000;\n  }\n\n  function gen() {\n    calls++;\n    if (calls <= 4) {\n      return Math.floor(56000 + Math.random() * 70000);\n    }\n    if (calls <= 25) {\n      return Math.floor(25000 + Math.random() * 47000);\n    }\n\n    if (calls <= 50) {\n      return Math.floor(15000 + Math.random() * 28000);\n    }\n    return Math.floor(1 + Math.random() * 12000);\n  }\n  return {\n    gen,\n    cancel\n  };\n}\n","import \"../styles/MainContent.scss\";\r\nimport React from \"react\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport { toKViewers } from \"./util.js\";\r\nconst GameCardRow = ({\r\n  data,\r\n  displayStreams,\r\n  mode,\r\n  displayCertainStreams,\r\n  toggleStreamVideo\r\n}) => {\r\n  if (mode !== \"topGames\") {\r\n    return (\r\n      <React.Fragment>\r\n        {data.map((content, i) => {\r\n          const url = content.thumbnail_url;\r\n          return (\r\n            <div key={i} className=\"col-md-6 col-lg-4\">\r\n              <StreamCard\r\n                toggleStreamVideo={toggleStreamVideo}\r\n                key={content.stream_id}\r\n                bg={url.replace(\"{width}x{height}\", \"500x300\")}\r\n                userName={content.user_name}\r\n                type={content.type}\r\n                gameId={content.game_id}\r\n                streamId={content.id}\r\n                viewers={content.viewer_count}\r\n                game={content.game_played}\r\n                banner={content.banner}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {data.map((content, i) => {\r\n        const url = content.box_art_url;\r\n        return (\r\n          <div key={i} className=\"xxs col-xs-6 col-md-4 col-lg-3\">\r\n            <GameCard\r\n              id={content.id}\r\n              displayStreams={displayStreams}\r\n              bg={url.replace(\"{width}x{height}\", \"300x400\")}\r\n              key={content.id}\r\n              game={content.name}\r\n              viewers={content.viewers}\r\n              displayCertainStreams={displayCertainStreams}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst GameCard = props => {\r\n  return (\r\n    <div className=\"game__card\">\r\n      <div\r\n        onClick={() => props.displayCertainStreams(props.id)}\r\n        className=\"game__card__top\"\r\n      >\r\n        <Fade>\r\n          <img alt=\"GAME__PHOTO\" src={props.bg} />\r\n        </Fade>\r\n      </div>\r\n      <div className=\"game__card__bottom\">\r\n        <em>{props.game}</em>\r\n        <p>\r\n          <i className=\"fa fa-eye\" />\r\n          {toKViewers(props.viewers)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StreamCard = props => {\r\n  return (\r\n    <div\r\n      onClick={() => props.toggleStreamVideo(props.userName)}\r\n      className=\"stream__card\"\r\n    >\r\n      <div className=\"stream__card__top\">\r\n        <Fade>\r\n          <img src={props.bg} alt=\"streamer banner\" />\r\n        </Fade>\r\n        <button className=\"stream__status\">{props.type}</button>\r\n        <button className=\"stream__viewers\">\r\n          {toKViewers(props.viewers) + \" viewers\"}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"stream__card__bottom\">\r\n        <div className=\"stream__card__left\">\r\n          <img src={props.banner} alt=\"stream banner\" />\r\n        </div>\r\n        <div className=\"stream__card__right\">\r\n          <em>{props.userName}</em>\r\n          <p>{props.game}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction renderData(\r\n  dataToRender,\r\n  mode,\r\n  displayStreams,\r\n  displayCertainStreams,\r\n  toggleStreamVideo\r\n) {\r\n  const renderedData = [];\r\n\r\n  for (let i = 0; i < dataToRender.length; i += 4) {\r\n    renderedData.push(\r\n      <GameCardRow\r\n        key={i}\r\n        mode={mode}\r\n        toggleStreamVideo={toggleStreamVideo}\r\n        displayStreams={displayStreams}\r\n        data={dataToRender.slice(i, i + 4)}\r\n        displayCertainStreams={displayCertainStreams}\r\n      />\r\n    );\r\n  }\r\n  return renderedData;\r\n}\r\n\r\nconst MainContent = ({\r\n  data,\r\n  displayStreams,\r\n  mode,\r\n  displayGames,\r\n  displayCertainStreams,\r\n  toggleStreamVideo,\r\n  loadingData\r\n}) => {\r\n  return (\r\n    <div className=\"container-fluid main\">\r\n      <div className=\"main__sidebar\">\r\n        <a onClick={() => displayGames()} className=\"sidebar__link\" href=\"#\">\r\n          Top Games\r\n        </a>\r\n        <a onClick={() => displayStreams()} className=\"sidebar__link\" href=\"#\">\r\n          Top Streams\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"main__video__container\">\r\n        <div className=\"loader__small container\">\r\n          {loadingData\r\n            ? null\r\n            : renderData(\r\n                data,\r\n                mode,\r\n                displayStreams,\r\n                displayCertainStreams,\r\n                toggleStreamVideo\r\n              )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainContent;\r\n","import \"../styles/VideoPlayer.scss\";\nimport React from \"react\";\n\nclass VideoPlayer extends React.Component {\n  render() {\n    const streamer = this.props.liveStreamer;\n    const cName = this.props.shouldShow\n      ? \"video__overlay__container\"\n      : \"video__overlay__container hidden\";\n    return (\n      <div className={cName}>\n        <iframe\n          className=\"stream__video\"\n          src={\"https://player.twitch.tv/?channel=\" + streamer}\n          frameBorder=\"0\"\n          allowFullScreen={true}\n          scrolling=\"no\"\n        />\n        <button\n          onClick={() => this.props.closeStream()}\n          className=\"exit__stream\"\n        >\n          X\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default VideoPlayer;\n","import \"font-awesome/css/font-awesome.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\nimport \"../styles/App.scss\";\nimport React from \"react\";\nimport Header from \"./Header.js\";\nimport MainContent from \"./MainContent.js\";\nimport VideoPlayer from \"./VideoPlayer.js\";\nimport { mergesort, genGameViews, toKViewers } from \"./util.js\";\n\n//process.env.REACT_APP_TWITCH_CLIENT_ID || ID\n\nclass App extends React.Component {\n  gameIdMap = {};\n  state = {\n    topGames: null,\n    topStreams: null,\n    mode: \"topGames\",\n    activeData: null,\n    shouldShowPlayer: false,\n    liveStreamer: null,\n    loadingApp: true,\n    loadingData: false\n  };\n  fetchGames() {\n    return fetch(\"https://api.twitch.tv/helix/games/top?first=100\", {\n      headers: {\n        \"Client-ID\": \"etc4by2ti074ihuwet11y9kvbdyh7d\"\n      }\n    }).then(response => {\n      return response.json();\n    });\n  }\n\n  fetchStreams(gameId) {\n    const withID =\n      \"https://api.twitch.tv/helix/streams?first=100&game_id=\" + gameId;\n    const url = gameId\n      ? withID\n      : \"https://api.twitch.tv/helix/streams?first=100\";\n    return fetch(url, {\n      headers: {\n        \"Client-ID\": process.env.REACT_APP_TWITCH_CLIENT_ID\n      }\n    }).then(response => {\n      return response.json();\n    });\n  }\n\n  getChannelBanners(channelIdArray) {\n    const userQuery = \"id=\" + channelIdArray.join(\"&id=\");\n    return fetch(\"https://api.twitch.tv/helix/users?\" + userQuery, {\n      headers: {\n        \"Client-ID\": process.env.REACT_APP_TWITCH_CLIENT_ID\n      }\n    }).then(response => {\n      return response.json();\n    });\n  }\n\n  componentDidMount() {\n    const userBannerArray = [];\n    const generator = genGameViews();\n    this.fetchGames()\n      .then(games => {\n        games.data.forEach(game => {\n          this.gameIdMap[game.id] = game.name;\n          game.viewers = generator.gen();\n        });\n        this.setState({\n          topGames: games.data,\n          activeData: games.data\n        });\n      })\n      .then(() => {\n        this.fetchStreams()\n          .then(streams => {\n            streams.data.forEach(stream => {\n              stream[\"game_played\"] = this.gameIdMap[stream.game_id];\n              userBannerArray.push(stream.user_id);\n            });\n            return Promise.resolve(streams);\n          })\n          .then(streams => {\n            this.getBannerAndUpdateStreams(streams, userBannerArray).then(\n              streams => {\n                this.setState({\n                  topStreams: streams.data,\n                  loadingApp: false\n                });\n              }\n            );\n          });\n      });\n    generator.cancel();\n  }\n\n  getBannerAndUpdateStreams(streams, userBannerArray) {\n    return this.getChannelBanners(userBannerArray).then(banners => {\n      streams.data.forEach((stream, i) => {\n        stream[\"banner\"] = banners.data[i].profile_image_url;\n      });\n      return Promise.resolve(streams);\n    });\n  }\n\n  displayCertainStreams(gameId) {\n    const userBannerArray = [];\n    this.setState({\n      loadingData: true\n    });\n    this.fetchStreams(gameId)\n      .then(streams => {\n        streams.data.forEach(stream => {\n          stream[\"game_played\"] = this.gameIdMap[stream.game_id];\n          userBannerArray.push(stream.user_id);\n        });\n        return Promise.resolve(streams);\n      })\n      .then(streams => {\n        this.getBannerAndUpdateStreams(streams, userBannerArray).then(\n          streams => {\n            this.setState({\n              mode: \"certainStreams\",\n              activeData: streams.data,\n              loadingData: false\n            });\n          }\n        );\n      });\n    //polyfill plz\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  }\n\n  displayStreams() {\n    const streams = this.state.topStreams;\n    const self = this;\n    this.setState({\n      mode: \"topStreams\",\n      activeData: streams,\n      loadingData: true\n    });\n\n    setTimeout(() => {\n      self.setState({ loadingData: false });\n    }, 100);\n  }\n\n  displayGames() {\n    const games = this.state.topGames;\n    const self = this;\n    this.setState({\n      mode: \"topGames\",\n      activeData: games,\n      loadingData: true\n    });\n\n    setTimeout(() => {\n      self.setState({ loadingData: false });\n    }, 100);\n  }\n\n  showStream(streamerName) {\n    this.setState({\n      shouldShowPlayer: true,\n      liveStreamer: streamerName\n    });\n  }\n\n  closeStream() {\n    this.setState({\n      shouldShowPlayer: false,\n      liveStreamer: null\n    });\n  }\n\n  filterData(stringToMatch) {\n    if (this.state.mode === \"certainStreams\") {\n      return;\n    }\n    const stringToMatch_LC = stringToMatch.toLowerCase();\n    if (stringToMatch_LC === \"\") {\n      this.state.mode === \"topGames\"\n        ? this.displayGames()\n        : this.displayStreams();\n      return;\n    }\n    const dataToFilterProp =\n      this.state.mode === \"topGames\" ? \"topGames\" : \"topStreams\";\n    const dataToFilter = this.state[dataToFilterProp.toString()];\n    const contentProp = this.state.mode === \"topGames\" ? \"name\" : \"game_played\";\n\n    const newData = dataToFilter.filter(e => {\n      if (!e[contentProp]) {\n        return;\n      }\n      return e[contentProp].toLowerCase().startsWith(stringToMatch_LC);\n    });\n    this.setState({\n      activeData: newData\n    });\n  }\n\n  sortData(type = \"desc\") {\n    const propWanted =\n      this.state.mode === \"topStreams\" || this.state.mode === \"certainStreams\"\n        ? \"viewer_count\"\n        : \"viewers\";\n    function comp(a, b) {\n      if (a[propWanted] < b[propWanted]) {\n        return type === \"desc\" ? 1 : -1;\n      }\n      if (a[propWanted] > b[propWanted]) {\n        return type === \"desc\" ? -1 : 1;\n      }\n      return 0;\n    }\n    this.setState({\n      activeData: mergesort(this.state.activeData, comp)\n    });\n  }\n\n  render() {\n    if (this.state.loadingApp) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <Header\n          sortData={this.sortData.bind(this)}\n          filterData={this.filterData.bind(this)}\n        />\n        <VideoPlayer\n          liveStreamer={this.state.liveStreamer}\n          shouldShow={this.state.shouldShowPlayer}\n          closeStream={this.closeStream.bind(this)}\n        />\n        <MainContent\n          toggleStreamVideo={this.showStream.bind(this)}\n          currentPage={this.state.currentPage}\n          data={this.state.activeData}\n          displayStreams={this.displayStreams.bind(this)}\n          mode={this.state.mode}\n          displayGames={this.displayGames.bind(this)}\n          displayCertainStreams={this.displayCertainStreams.bind(this)}\n          loadingData={this.state.loadingData}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/App.js\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}